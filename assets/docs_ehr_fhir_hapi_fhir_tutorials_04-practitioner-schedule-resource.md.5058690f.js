import{_ as s,o as e,c as a,Q as o}from"./chunks/framework.f9076d03.js";const l=JSON.parse('{"title":"Tutorial - FHIR Practitioner Schedule Resource","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ehr/fhir/hapi_fhir/tutorials/04-practitioner-schedule-resource.md","filePath":"docs/ehr/fhir/hapi_fhir/tutorials/04-practitioner-schedule-resource.md","lastUpdated":1697780928000}'),n={name:"docs/ehr/fhir/hapi_fhir/tutorials/04-practitioner-schedule-resource.md"},r=[o('<h1 id="tutorial-fhir-practitioner-schedule-resource" tabindex="-1">Tutorial - FHIR Practitioner Schedule Resource <a class="header-anchor" href="#tutorial-fhir-practitioner-schedule-resource" aria-label="Permalink to &quot;Tutorial - FHIR Practitioner Schedule Resource&quot;">​</a></h1><ul><li><p>Tutorial code on GitHub <a href="https://github.com/Copper3D-brids/hapi-py-fhir-tutorials/blob/main/schedule.py" target="_blank" rel="noreferrer">hapi-py-fhir-tutorials -- schedule.py</a>.</p></li><li><p>Currently, it is a <strong>private</strong> repository, will open source later...</p></li></ul><h2 id="background" tabindex="-1">Background <a class="header-anchor" href="#background" aria-label="Permalink to &quot;Background&quot;">​</a></h2><h3 id="scenario" tabindex="-1">Scenario <a class="header-anchor" href="#scenario" aria-label="Permalink to &quot;Scenario&quot;">​</a></h3><p>A clinical coordinator invited John for a visit. John said, he&#39;d like to visit the center on Monday if possible. The coordinator needs to select an appropriate doctor with avaliable slots in the schedule. So, the coordinator views a list of available schedules with a <code>General Practice</code> service type.</p><p>Select the first found schedule with available slots for the next Monday (09-16-2018).</p><h2 id="setup-environment" tabindex="-1">Setup environment <a class="header-anchor" href="#setup-environment" aria-label="Permalink to &quot;Setup environment&quot;">​</a></h2><ul><li>Same to Tutorial 02</li></ul><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><h3 id="import-library" tabindex="-1">Import library <a class="header-anchor" href="#import-library" aria-label="Permalink to &quot;Import library&quot;">​</a></h3><p>At the beginning we need to import libraries <code>fhirpy</code> and <code>os</code>.</p><p>Also, we re-use the customise function <code>pprint</code> from Tutorial-02. We&#39;ll use it to display some Observation resource data structures.</p><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> os</span></span>\n<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> fhirpy </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> AsyncFHIRClient</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> os</span></span>\n<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> fhirpy </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> AsyncFHIRClient</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="create-an-instance-of-connection" tabindex="-1">Create an instance of connection <a class="header-anchor" href="#create-an-instance-of-connection" aria-label="Permalink to &quot;Create an instance of connection&quot;">​</a></h3><p>To load data from FHIR server we should instaniate <code>FHIRClient</code> class from <code>fhirpy AsyncFHIRClient</code> method.</p><p>Let&#39;s pass <code>url</code> and <code>authorization</code> arguments from environment.</p><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">client </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> AsyncFHIRClient(</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">url</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;http://localhost:8080/fhir/&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">authorization</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;Bearer TOKEN&#39;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    )</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">client </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> AsyncFHIRClient(</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">url</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;http://localhost:8080/fhir/&#39;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">authorization</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;Bearer TOKEN&#39;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">    )</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Now, we are able to operate with FHIR resources using <code>client</code>.</p><h2 id="fhir-resource-practitioner-schedule-and-slot" tabindex="-1">FHIR resource Practitioner, Schedule and Slot <a class="header-anchor" href="#fhir-resource-practitioner-schedule-and-slot" aria-label="Permalink to &quot;FHIR resource Practitioner, Schedule and Slot&quot;">​</a></h2><h3 id="practitioner-resource" tabindex="-1">Practitioner Resource <a class="header-anchor" href="#practitioner-resource" aria-label="Permalink to &quot;Practitioner Resource&quot;">​</a></h3><p><a href="https://www.hl7.org/fhir/practitioner.html" target="_blank" rel="noreferrer">Practitioner</a> covers all individuals who are engaged in the healthcare process and healthcare-related services as part of their formal responsibilities.</p><p>The two major distinctions from <a href="https://www.hl7.org/fhir/relatedperson.html" target="_blank" rel="noreferrer">RelatedPerson</a> are:</p><ul><li>Formal responsibility for the healthcare-related services.</li><li>the fact that <code>Practitioner</code> operates on behalf of the care delivery organization over multiple patients.</li></ul><p>Within an organization <code>Practitioner</code> can be associated with multiple roles defined by <a href="https://www.hl7.org/fhir/practitionerrole.html" target="_blank" rel="noreferrer">PractitionerRole</a>.</p><p>Clinical specialty of the clinician is defined in terms of <a href="https://www.hl7.org/fhir/valueset-c80-practice-codes.html" target="_blank" rel="noreferrer">Practice Setting Code Value Set</a>.</p><h3 id="schedule-resource" tabindex="-1">Schedule Resource <a class="header-anchor" href="#schedule-resource" aria-label="Permalink to &quot;Schedule Resource&quot;">​</a></h3><p><a href="https://www.hl7.org/fhir/schedule.html" target="_blank" rel="noreferrer">Schedule</a> controls dates and times avaliable for performance of a service and/or the use of a resource.</p><p>The service provided by <code>Schedule</code> can be parameterized with <code>serviceCategory</code>, <code>serviceType</code> and <code>speciality</code>.</p><ul><li><p><a href="https://www.hl7.org/fhir/valueset-service-category.html" target="_blank" rel="noreferrer">serviceCategory</a> is a broader categorisation of the servcice that will be performed during this appointment.</p><ul><li>For example, in <a href="https://terminology.hl7.org/5.1.0/CodeSystem-service-category.html" target="_blank" rel="noreferrer">service category system</a> code <code>2</code> stands for <code>Aged Care</code>.</li></ul></li><li><p><a href="https://www.hl7.org/fhir/valueset-service-type.html" target="_blank" rel="noreferrer">serviceType</a> is used for more concrete service that will be performed during this appointment.</p><ul><li>For example, in <a href="https://terminology.hl7.org/5.1.0/CodeSystem-service-type.html" target="_blank" rel="noreferrer">service type system</a>: <code>Aged Care</code> is split into multiple components: <ul><li>code <code>2</code> - <code>Aged Care Assessment</code></li><li>code <code>3</code> - <code>Aged Care Information/Referral</code></li><li>code <code>4</code> - <code>Aged Residential Care</code></li></ul></li></ul></li><li><p><a href="https://www.hl7.org/fhir/valueset-c80-practice-codes.html" target="_blank" rel="noreferrer">speciality</a> is the speciality of a practitioner that would be required to perform the service requested.</p><ul><li>For example, in <a href="https://www.hl7.org/fhir/valueset-c80-practice-codes.html" target="_blank" rel="noreferrer">practie codes</a> for snomed system <code>http://snomed.info/sct</code> code <code>394814009</code> stands for <code>General practice</code>.</li></ul></li></ul><p>The only required field is <code>actor</code> - the resource the <code>Schedule</code> is providing availablity information for.</p><p>It is of <code>Reference</code> type and can reffer to <code>Practitioner</code>, <code>PractitionerRole</code>, <code>Device</code> or a few other resources.</p><h4 id="search-parameters-for-schedule" tabindex="-1">Search Parameters for Schedule <a class="header-anchor" href="#search-parameters-for-schedule" aria-label="Permalink to &quot;Search Parameters for Schedule&quot;">​</a></h4><p>There are five <a href="https://www.hl7.org/fhir/schedule.html#search" target="_blank" rel="noreferrer">search parameters</a> defined for <code>Schedule</code> resource.</p><ul><li><code>active</code> ro find a <code>Schedule</code> in a concerte state (active or inactive).</li><li><code>actor</code> to find a <code>Schedule</code> for the individual (<code>Practitioner</code>, for instance).</li><li><code>identifier</code> to search for a <code>Schedule</code> with specific <code>identifier</code>.</li><li><code>type</code> for the type ofappointments that can be booked into associated slots.</li><li><code>date</code> for <code>Schedule</code> resources that have a period that contains this date specified.</li></ul><h4 id="slot-on-schedule" tabindex="-1">Slot on Schedule <a class="header-anchor" href="#slot-on-schedule" aria-label="Permalink to &quot;Slot on Schedule&quot;">​</a></h4><p>A slot of time on a schedule that might be available for booking appointments is defined with <a href="#slot">Slot</a> resource.</p><p><code>Schedule</code> does not directly contains <code>Slot</code> resources. It has <code>planningHorizon</code> instead - the interval for which an organization is accepting appointments and each <code>Slot</code> has a reference to the <code>Schedule</code> to which it belongs.</p><h4 id="schedule-scenario" tabindex="-1">Schedule scenario <a class="header-anchor" href="#schedule-scenario" aria-label="Permalink to &quot;Schedule scenario&quot;">​</a></h4><p>Let&#39;s suppose that the organization has a weekly schedule with eight one-hour appointments permitted per a business day.</p><p>The weekly schedule will fit in a single <code>Schedule</code> resource with the dates for the start and end of week set.</p><p>This <code>Schedule</code> resource will then have 40 <code>Slot</code> resources associated with it.</p><h3 id="slot" tabindex="-1">Slot <a class="header-anchor" href="#slot" aria-label="Permalink to &quot;Slot&quot;">​</a></h3><h3 id="slot-resource" tabindex="-1">Slot Resource <a class="header-anchor" href="#slot-resource" aria-label="Permalink to &quot;Slot Resource&quot;">​</a></h3><p><a href="https://www.hl7.org/fhir/slot.html" target="_blank" rel="noreferrer">Slot</a>s are effectively spaces of free/busy time, they do not provide any information about appointments that are avaliable, just the time, and optionally what the time can be used for.</p><p>There can be multiple <code>Slots</code> referring to a given instant of time, this is possible in a case of, for example, open group therapy.</p><p>The slots in a schedule are not necessarily of the same size, and can be different for different days of week.</p><h2 id="find-a-schedule" tabindex="-1">Find a schedule <a class="header-anchor" href="#find-a-schedule" aria-label="Permalink to &quot;Find a schedule&quot;">​</a></h2><p>Let&#39;s search for a schedule with <code>General Practice</code> type of appointments.</p><p><code>Schedule</code> has a <a href="https://www.hl7.org/fhir/schedule.html#search" target="_blank" rel="noreferrer">search parameter</a> <code>service-type</code> that translates into <code>serviceType</code> field. <code>serviceType</code> is defined in terms of <a href="https://terminology.hl7.org/5.1.0/CodeSystem-service-type.html" target="_blank" rel="noreferrer">ServiceType value set</a>. On the value set <code>General Practice</code> is defined with code <code>124</code>.</p><p>Note that every <code>Schedule</code> provides availability information for a list of resources. The list is stored in a field <code>actor</code>.</p><p>We may want to ask <code>HAPI FHIR server</code> to include those actors in the query result.</p><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">schedules </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.resources(</span><span style="color:#9ECBFF;">&#39;Schedule&#39;</span><span style="color:#E1E4E8;">).search(</span><span style="color:#F97583;">**</span><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&#39;date&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;2018-09-16&#39;</span><span style="color:#E1E4E8;">, </span></span>\n<span class="line"><span style="color:#9ECBFF;">&#39;service-type&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">124</span><span style="color:#E1E4E8;">}).include(</span><span style="color:#9ECBFF;">&#39;Schedule&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;actor&#39;</span><span style="color:#E1E4E8;">).fetch()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">schedules </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.resources(</span><span style="color:#032F62;">&#39;Schedule&#39;</span><span style="color:#24292E;">).search(</span><span style="color:#D73A49;">**</span><span style="color:#24292E;">{</span><span style="color:#032F62;">&#39;date&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;2018-09-16&#39;</span><span style="color:#24292E;">, </span></span>\n<span class="line"><span style="color:#032F62;">&#39;service-type&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">124</span><span style="color:#24292E;">}).include(</span><span style="color:#032F62;">&#39;Schedule&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;actor&#39;</span><span style="color:#24292E;">).fetch()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Let&#39;s look into the <code>actors</code> returned with the query result.</p><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> schedule </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> schedules:</span></span>\n<span class="line"><span style="color:#E1E4E8;">    actors </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> actor.to_resource() </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> actor </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> schedule[</span><span style="color:#9ECBFF;">&#39;actor&#39;</span><span style="color:#E1E4E8;">]]</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(actors)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> schedule </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> schedules:</span></span>\n<span class="line"><span style="color:#24292E;">    actors </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> actor.to_resource() </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> actor </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> schedule[</span><span style="color:#032F62;">&#39;actor&#39;</span><span style="color:#24292E;">]]</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(actors)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Each of the schedules provides availability information for <code>Practitioner</code> and <code>Location</code>.</p><h2 id="load-slots-schedules" tabindex="-1">Load slots schedules <a class="header-anchor" href="#load-slots-schedules" aria-label="Permalink to &quot;Load slots schedules&quot;">​</a></h2><p>Please, read about <a href="https://www.hl7.org/fhir/slot.html#search" target="_blank" rel="noreferrer">Slot search parameters</a> before moving on.</p><p>Now let&#39;s search for slots defined for the schedules.</p><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">slots </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.resources(</span><span style="color:#9ECBFF;">&#39;Slot&#39;</span><span style="color:#E1E4E8;">).search(</span><span style="color:#FFAB70;">schedule</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">schedule[</span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">]).fetch() </span></span>\n<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> schedule </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> schedules]</span></span>\n<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(slots)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">slots </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.resources(</span><span style="color:#032F62;">&#39;Slot&#39;</span><span style="color:#24292E;">).search(</span><span style="color:#E36209;">schedule</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">schedule[</span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">]).fetch() </span></span>\n<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> schedule </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> schedules]</span></span>\n<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(slots)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>There are no available slots for <code>Adam Ainslay</code> on Monday 09-16-2018, so we&#39;ll work with <code>Kelly Smith</code> - first in the schedules list.</p><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">schedule </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> schedules[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]</span></span>\n<span class="line"><span style="color:#E1E4E8;">pprint(schedule)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">schedule </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> schedules[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>\n<span class="line"><span style="color:#24292E;">pprint(schedule)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Let&#39;s display the schedule in more comfortable format.</p><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">slots </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.resources(</span><span style="color:#9ECBFF;">&#39;Slot&#39;</span><span style="color:#E1E4E8;">).search(</span><span style="color:#FFAB70;">schedule</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">schedule[</span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">]).fetch()</span></span>\n<span class="line"><span style="color:#E1E4E8;">details </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [(slot.get(</span><span style="color:#9ECBFF;">&#39;start&#39;</span><span style="color:#E1E4E8;">),slot.get(</span><span style="color:#9ECBFF;">&#39;end&#39;</span><span style="color:#E1E4E8;">),slot.get(</span><span style="color:#9ECBFF;">&#39;status&#39;</span><span style="color:#E1E4E8;">))</span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> slot </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> slots]</span></span>\n<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(details)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">slots </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.resources(</span><span style="color:#032F62;">&#39;Slot&#39;</span><span style="color:#24292E;">).search(</span><span style="color:#E36209;">schedule</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">schedule[</span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">]).fetch()</span></span>\n<span class="line"><span style="color:#24292E;">details </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [(slot.get(</span><span style="color:#032F62;">&#39;start&#39;</span><span style="color:#24292E;">),slot.get(</span><span style="color:#032F62;">&#39;end&#39;</span><span style="color:#24292E;">),slot.get(</span><span style="color:#032F62;">&#39;status&#39;</span><span style="color:#24292E;">))</span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> slot </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> slots]</span></span>\n<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(details)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Find all of the <code>free</code> slots for the schedule using API. <strong>Hint:</strong> this can be done with <code>status</code> <a href="https://www.hl7.org/fhir/slot.html#search" target="_blank" rel="noreferrer">search parameters</a>.</p><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">slots </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.resources(</span><span style="color:#9ECBFF;">&#39;Slot&#39;</span><span style="color:#E1E4E8;">).search(</span><span style="color:#FFAB70;">schedule</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">schedule[</span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">],</span></span>\n<span class="line"><span style="color:#FFAB70;">status</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;free&#39;</span><span style="color:#E1E4E8;">).fetch()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">details </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [(slot.get(</span><span style="color:#9ECBFF;">&#39;start&#39;</span><span style="color:#E1E4E8;">),slot.get(</span><span style="color:#9ECBFF;">&#39;end&#39;</span><span style="color:#E1E4E8;">),slot.get(</span><span style="color:#9ECBFF;">&#39;status&#39;</span><span style="color:#E1E4E8;">))</span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> slot </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> slots]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(details)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">slots </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.resources(</span><span style="color:#032F62;">&#39;Slot&#39;</span><span style="color:#24292E;">).search(</span><span style="color:#E36209;">schedule</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">schedule[</span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">],</span></span>\n<span class="line"><span style="color:#E36209;">status</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;free&#39;</span><span style="color:#24292E;">).fetch()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">details </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [(slot.get(</span><span style="color:#032F62;">&#39;start&#39;</span><span style="color:#24292E;">),slot.get(</span><span style="color:#032F62;">&#39;end&#39;</span><span style="color:#24292E;">),slot.get(</span><span style="color:#032F62;">&#39;status&#39;</span><span style="color:#24292E;">))</span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> slot </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> slots]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(details)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Find all of the slots starting at 11am on Monday 09-16-2018. <strong>Hint:</strong> use <code>start</code> <a href="https://www.hl7.org/fhir/slot.html#search" target="_blank" rel="noreferrer">search parameters</a>.</p><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">slots </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.resources(</span><span style="color:#9ECBFF;">&#39;Slot&#39;</span><span style="color:#E1E4E8;">).search(</span><span style="color:#FFAB70;">schedule</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">schedule[</span><span style="color:#9ECBFF;">&#39;id&#39;</span><span style="color:#E1E4E8;">], </span></span>\n<span class="line"><span style="color:#FFAB70;">start</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;2018-09-16T11:00:00&#39;</span><span style="color:#E1E4E8;">).fetch()</span></span>\n<span class="line"><span style="color:#E1E4E8;">details </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [(slot.get(</span><span style="color:#9ECBFF;">&#39;start&#39;</span><span style="color:#E1E4E8;">),slot.get(</span><span style="color:#9ECBFF;">&#39;end&#39;</span><span style="color:#E1E4E8;">),slot.get(</span><span style="color:#9ECBFF;">&#39;status&#39;</span><span style="color:#E1E4E8;">))</span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> slot </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> slots]</span></span>\n<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(details)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">slots </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.resources(</span><span style="color:#032F62;">&#39;Slot&#39;</span><span style="color:#24292E;">).search(</span><span style="color:#E36209;">schedule</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">schedule[</span><span style="color:#032F62;">&#39;id&#39;</span><span style="color:#24292E;">], </span></span>\n<span class="line"><span style="color:#E36209;">start</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;2018-09-16T11:00:00&#39;</span><span style="color:#24292E;">).fetch()</span></span>\n<span class="line"><span style="color:#24292E;">details </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [(slot.get(</span><span style="color:#032F62;">&#39;start&#39;</span><span style="color:#24292E;">),slot.get(</span><span style="color:#032F62;">&#39;end&#39;</span><span style="color:#24292E;">),slot.get(</span><span style="color:#032F62;">&#39;status&#39;</span><span style="color:#24292E;">))</span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> slot </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> slots]</span></span>\n<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(details)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><p>In this tutorial the following topics were covered:</p><ul><li><code>Practitioner</code>, <code>Schedule</code> and <code>Slot</code> resources.</li><li>How to find a <code>Schedule</code> by service type and date.</li><li>How to load <code>Slots</code> for a Schedule resource.</li><li>How to search <code>Slots</code> for specific date and speciality.</li></ul>',70)];const t=s(n,[["render",function(s,o,l,n,t,p){return e(),a("div",null,r)}]]);export{l as __pageData,t as default};
